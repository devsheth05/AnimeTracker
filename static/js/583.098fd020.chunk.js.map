{"version":3,"file":"static/js/583.098fd020.chunk.js","mappings":"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","sources":["components/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useAnimeContext } from './AnimeContext'; // Ensure the correct path\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './HomePage.css';\r\n\r\nconst HomePage = () => {\r\n  const { animeList, fetchAnimeList } = useAnimeContext(); // Ensure it's being used properly\r\n  const [topAnime, setTopAnime] = useState([]);\r\n  const [recentlyAdded, setRecentlyAdded] = useState([]);\r\n  const [genres, setGenres] = useState(['Mecha', 'Action', 'Fantasy', 'Drama', 'Adventure']);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [showSearchModal, setShowSearchModal] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch the latest anime episodes from the Jikan API\r\n  const fetchLatestEpisodes = async () => {\r\n    try {\r\n      const response = await axios.get('https://api.jikan.moe/v4/seasons/now', { params: { limit: 10 } });\r\n      const sortedAnime = (response.data.data || [])\r\n        .filter((anime) => anime.episodes && anime.airing)\r\n        .sort((a, b) => new Date(b.aired.from) - new Date(a.aired.from))\r\n        .slice(0, 5);\r\n\r\n      setRecentlyAdded(sortedAnime);\r\n    } catch (error) {\r\n      console.error('Error fetching latest episodes:', error);\r\n    }\r\n  };\r\n\r\n  // Handle search query change\r\n  const handleSearchChange = (event) => setSearchQuery(event.target.value);\r\n\r\n  // Search for anime based on the search query\r\n  const searchAnime = async () => {\r\n    if (searchQuery.trim() !== '') {\r\n      try {\r\n        const response = await axios.get(`https://api.jikan.moe/v4/anime`, {\r\n          params: {\r\n            q: searchQuery,\r\n            limit: 5,\r\n          },\r\n        });\r\n        setSearchResults(response.data.data || []);\r\n      } catch (error) {\r\n        console.error('Error searching for anime:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Fetch the top 5 anime from localStorage or use the default\r\n  useEffect(() => {\r\n    fetchAnimeList();\r\n    const storedTop5 = JSON.parse(localStorage.getItem('top5Anime'));\r\n    if (storedTop5) {\r\n      setTopAnime(storedTop5);\r\n    } else {\r\n      // Default or fallback top 5 anime\r\n      const defaultTopAnime = [];\r\n      setTopAnime(defaultTopAnime);\r\n    }\r\n    fetchLatestEpisodes();\r\n  }, []);\r\n  useEffect(() => {\r\n  console.log('animeList:', animeList); // Log to see the current list\r\n}, [animeList]);\r\n\r\n  return (\r\n    <div className=\"homepage-container\">\r\n      <div className=\"welcome-section\">\r\n        <h1 className=\"welcome-message\">Welcome to AnimeTracker!</h1>\r\n        <p className=\"description\">\r\n          Discover and track your favorite anime. Browse top-rated anime, explore featured genres, and keep up with the latest additions.\r\n          Start exploring and find your next favorite show!\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"search-button-container\">\r\n        <button onClick={() => navigate('/anime-search-and-order')} className=\"edit-list-btn\">\r\n          Edit List\r\n        </button>\r\n      </div>\r\n\r\n      <section className=\"top-anime-showcase\">\r\n        <h1 className=\"section-title\">Top 5 Anime</h1>\r\n        <div className=\"anime-grid\">\r\n          {topAnime.length > 0 ? (\r\n            topAnime.map((anime) => (\r\n              <div key={anime.id} className=\"anime-item\">\r\n                <img\r\n                  src={anime.coverImage?.large || 'placeholder.jpg'}\r\n                  alt={anime.title?.romaji || anime.title?.english || 'Anime Cover'}\r\n                  className=\"anime-img\"\r\n                />\r\n                <div className=\"anime-info\">\r\n                  <h3>{anime.title?.romaji || anime.title?.english || 'Unknown Title'}</h3>\r\n                  <Link to={`/anime/${anime.id}`} className=\"view-details-btn\">View Details</Link>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p className=\"empty-list-message\">Your list is empty right now! Click on \"Edit List\" to get started!</p>\r\n          )}\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"latest-episodes\">\r\n        <h2 className=\"section-title\">Latest Episodes Released</h2>\r\n        {recentlyAdded.length > 0 ? (\r\n          <div className=\"anime-grid\">\r\n            {recentlyAdded.map((anime) => (\r\n              <div key={anime.mal_id} className=\"anime-item\">\r\n                <img\r\n                  src={anime.images?.jpg?.large_image_url || 'placeholder.jpg'}\r\n                  alt={anime.title || 'Anime Cover'}\r\n                  className=\"anime-img\"\r\n                />\r\n                <div className=\"anime-info\">\r\n                  <h3>{anime.title || 'Unknown Title'}</h3>\r\n                  <p>Episodes: {anime.episodes || 'N/A'}</p>\r\n                  <Link to={`/anime/${anime.mal_id}`} className=\"view-details-btn\">View Details</Link>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>No recent episodes available.</p>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["HomePage","animeList","fetchAnimeList","useAnimeContext","topAnime","setTopAnime","useState","recentlyAdded","setRecentlyAdded","genres","setGenres","searchQuery","setSearchQuery","searchResults","setSearchResults","showSearchModal","setShowSearchModal","navigate","useNavigate","useEffect","storedTop5","JSON","parse","localStorage","getItem","async","sortedAnime","axios","get","params","limit","data","filter","anime","episodes","airing","sort","a","b","Date","aired","from","slice","error","console","fetchLatestEpisodes","log","_jsxs","className","children","_jsx","onClick","length","map","_anime$coverImage","_anime$title","_anime$title2","_anime$title3","_anime$title4","src","coverImage","large","alt","title","romaji","english","Link","to","concat","id","_anime$images","_anime$images$jpg","images","jpg","large_image_url","mal_id"],"sourceRoot":""}